name: github-actions bot

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened, closed]

jobs:
  if-merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@${{ github.actor }}, your PR has been merged into the main repository.\nMany thanks for your valuable contribution!`
            });

  add-comment:
    if: github.event.action == 'opened' && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 5
        with:
          script: |
            const event_name = `${{ github.event_name }}`;
            let body;
            if (event_name == 'pull_request') {
              body = `Hi, @${{ github.actor }} ðŸ‘‹\nThanks for your PR!`
            } else {
              body = `Hi, @${{ github.actor }} ðŸ‘‹\nThanks for reporting the issue!`
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  apply-label:
    needs: [add-comment]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 5
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            if (issue.data.labels.length > 0) {
              return;
            }
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['needs triage']
            });

  assign-assignee:
    needs: [add-comment]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 5
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            if (issue.data.assignees.length > 0) {
              return;
            }
            let assignee;
            try {
              const ret = await github.rest.issues.checkUserCanBeAssigned({
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignee: `${{ github.actor }}`
              });
              assignee = `${{ github.actor }}`;
            } catch (e) {
              assignee = `${{ github.repository_owner }}`;
            }
            github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: assignee
            });
