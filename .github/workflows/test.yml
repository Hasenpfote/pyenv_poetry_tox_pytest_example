name: Test

on:
  workflow_dispatch:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  matrix_prep:
    if: |
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name

    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.read-file.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read JSON file
        id: read-file
        uses: ./.github/actions/read-file
        with:
          path: .github/workflows/test_matrix.json

  build:
    needs: matrix_prep
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}

    runs-on: ${{ matrix.os }}
    name: ${{ format('build ({0}, {1})', matrix.os, matrix.python-version) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry ${{ matrix.poetry-version }}
        id: setup-poetry
        uses: ./.github/actions/setup-poetry
        with:
          cache-path: ${{ matrix.poetry-cache-paths }}
          cache-key: ${{ format(matrix.poetry-cache-key-fmt, matrix.poetry-version, matrix.os, steps.setup-python.outputs.python-version) }}
          poetry-version: ${{ matrix.poetry-version }}
          poetry-home: ${{ matrix.poetry-home }}
          poetry-path: ${{ matrix.poetry-path }}

      - name: Set up Poetry dependencies
        id: setup-poetry-dependencies
        uses: ./.github/actions/setup-poetry-dependencies
        with:
          cache-key: ${{ format(matrix.venv-cache-key-fmt, matrix.os, steps.setup-python.outputs.python-version, hashFiles('**/poetry.lock')) }}
          python-version: ${{ steps.setup-python.outputs.python-version }}
          poetry-install-args: --no-interaction --no-root --with dev

      - name: Test with pytest
        run: |
          ${{ steps.setup-poetry-dependencies.outputs.venv-activate }}
          tox -e py -- -v --color=yes
          deactivate
